# Generated by Django 3.0.8 on 2020-07-17 21:02

import datetime
import django.contrib.gis.db.models.fields
import django.contrib.gis.geos.point
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
from django.utils.timezone import utc
import insight.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Hobby',
            fields=[
                ('code_name', models.CharField(default='', max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=30)),
                ('editors', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), default=list, size=None)),
                ('limits', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('weight', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
            ],
        ),
        migrations.CreateModel(
            name='Leaderboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration_type', models.CharField(default='weekly', max_length=8)),
                ('start_date', models.DateField(default=datetime.date(2020, 7, 18))),
                ('end_date', models.DateField(default=datetime.date(2020, 7, 18))),
                ('hobby', models.CharField(default='', max_length=20)),
                ('hobby_name', models.CharField(default='', max_length=30)),
                ('rank_list', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accounts', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), default=list, size=None)),
                ('created', models.DateTimeField(default=datetime.datetime(2020, 7, 17, 21, 2, 36, 989911, tzinfo=utc))),
                ('notification_type', models.CharField(default='general-activity', max_length=20)),
                ('header', models.TextField()),
                ('body', models.TextField()),
                ('image', models.TextField()),
                ('meta', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.CharField(default='', max_length=15, primary_key=True, serialize=False)),
                ('username', models.CharField(default='', max_length=30, unique=True)),
                ('account_id', models.CharField(max_length=50)),
                ('avatar', models.TextField()),
                ('editor', models.CharField(max_length=10)),
                ('hobby', models.CharField(default='', max_length=20)),
                ('hobby_name', models.CharField(default='', max_length=30)),
                ('assets', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('caption', models.TextField()),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=list, size=None)),
                ('hastags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), default=list, size=None)),
                ('atags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), default=list, size=None)),
                ('coords', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name=django.contrib.gis.geos.point.Point(0, 0, srid=4326))),
                ('action_count', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('created_at', models.DateTimeField(default=datetime.datetime(2020, 7, 17, 21, 2, 36, 985156, tzinfo=utc))),
                ('rank', models.IntegerField(default=0)),
                ('score', models.DecimalField(decimal_places=3, default=0.0, max_digits=7)),
            ],
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.CharField(max_length=15)),
                ('comments', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.jsonb.JSONField(), default=list, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='UserActionRef',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.CharField(default='', max_length=50)),
                ('date_created', models.DateField(default=datetime.date(2020, 7, 18))),
                ('time_created', models.TimeField(default=datetime.time(2, 32, 36, 987234))),
                ('hobby', models.CharField(default='', max_length=20)),
                ('loves', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), default=list, size=None)),
                ('shares', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), default=list, size=None)),
                ('saves', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), default=list, size=None)),
                ('comments', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), default=list, size=None)),
                ('views', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), default=list, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('account_id', models.CharField(default='account_id', max_length=50, primary_key=True, serialize=False)),
                ('id_type', models.CharField(default='PHONE', max_length=6)),
                ('joined_at', models.DateField(default=datetime.date(2020, 7, 18))),
                ('username', models.CharField(default='', max_length=30, unique=True)),
                ('first_name', models.CharField(default='', max_length=30)),
                ('last_name', models.CharField(default='', max_length=30)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('details', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('comfort_zones_text', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=70), default=list, size=None)),
                ('activity_coords', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('avatar', models.TextField()),
                ('influencer', models.BooleanField(default=False)),
                ('influencing_hobby', models.CharField(default='', max_length=20)),
                ('hobby_map', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('primary_hobby', models.CharField(default='', max_length=20)),
                ('follower_count', models.IntegerField(default=0)),
                ('following_count', models.IntegerField(default=0)),
                ('saves', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), default=list, size=None)),
                ('friend_count', models.IntegerField(default=0)),
                ('friend_requests', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), default=list, size=None)),
                ('description', models.TextField()),
                ('following', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), default=list, size=None)),
                ('friend', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), default=list, size=None)),
                ('current_coord', django.contrib.gis.db.models.fields.PointField(default=django.contrib.gis.geos.point.Point(0, 0, srid=4326), srid=4326)),
                ('new_notification', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', insight.models.AccountManager()),
            ],
        ),
    ]
